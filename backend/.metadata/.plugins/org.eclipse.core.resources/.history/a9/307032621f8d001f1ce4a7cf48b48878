package com.spring.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.spring.dao.RegistrationRepo;
import com.spring.entities.User;

@CrossOrigin("http://localhost:3000")
@RestController
public class Controller {

	   @Autowired
	    private RegistrationRepo registrationRepo;

	    @PostMapping("/user")
	    public User newUser(@RequestBody User newUser) {
	        return registrationRepo.save(newUser);
	    }

	    @GetMapping("/users")
	    public List<User> getAllUsers() {
	        return registrationRepo.findAll();
	    }

	    @GetMapping("/user/{id}")
	    User getUserById(@PathVariable("id") int id) {
	        return registrationRepo.findById(id)
	                .orElseThrow(() -> new UserNotFoundException(id));
	    }

	    @PutMapping("/user/{id}")
	    User updateUser(@RequestBody User newUser, @PathVariable("id") int id) {
	        return registrationRepo.findById(id)
	                .map(user -> {
	                    user.setUsername(newUser.getUsername());
	                    user.setName(newUser.getName());
	                    user.setEmail(newUser.getEmail());
	                    return userRepository.save(user);
	                }).orElseThrow(() ->new UserNotFoundException(id));
	    }

	    @DeleteMapping("/user/{id}")
	    String deleteUser(@PathVariable Long id) {
	        if (!userRepository.existsById(id)) {
	            throw new UserNotFoundException(id);
	        }
	        userRepository.deleteById(id);
	        return "User with the id " + id + " has been successfully deleted.";
	    }


}
